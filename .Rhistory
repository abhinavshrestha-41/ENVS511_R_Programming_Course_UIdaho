library(sp)
library(sf)
library(raster)
library(rLiDAR)
library(lidR)
library(rgdal)
library(terra)
library(ggplot2)
library(rgl)
library(gridExtra)
library(agricolae)
library(data.table)
library(plotly)
library(MASS)
library(rayshader)
getwd()
topkill <- read.table('TopKill_Set.txt', sep = "\t", header = TRUE)
graytree <- read.table('GrayTree_Set.txt', sep = "\t", header = TRUE)
fulltree <- read.table('FullTree_Set.txt', sep = "\t", header = TRUE)
?colnames
colnames(topkill, graytree, fulltree) <- c("x", "y", "z", "blue", "green", "red", "RedEdge", "NIR", "R", "G", "B")
View(fulltree)
View(graytree)
colnames(topkill) <- c("x", "y", "z", "blue", "green", "red", "RedEdge", "NIR", "R", "G", "B")
colnames(graytree) <- c("x", "y", "z", "blue", "green", "red", "RedEdge", "NIR", "R", "G", "B")
colnames(fulltree) <- c("x", "y", "z", "blue", "green", "red", "RedEdge", "NIR", "R", "G", "B")
View(fulltree)
topkill[4:8] <- (topkill[4:8]/10000)
View(topkill)
View(graytree)
View(topkill)
topkill <- read.table('TopKill_Set.txt', sep = "\t", header = TRUE)
graytree <- read.table('GrayTree_Set.txt', sep = "\t", header = TRUE)
fulltree <- read.table('FullTree_Set.txt', sep = "\t", header = TRUE)
colnames(topkill) <- c("x", "y", "z", "blue", "green", "red", "RedEdge", "NIR", "R", "G", "B")
colnames(graytree) <- c("x", "y", "z", "blue", "green", "red", "RedEdge", "NIR", "R", "G", "B")
colnames(fulltree) <- c("x", "y", "z", "blue", "green", "red", "RedEdge", "NIR", "R", "G", "B")
topkill[4:8] <- (topkill[4:8]/10000)
graytree[4:8] <- (graytree[4:8]/10000)
fulltree[4:8] <- (fulltree[4:8]/10000)
View(fulltree)
ft <- ggplot(fulltree)+
geom_density(aes(x = blue, color = "blue")) +
geom_density(aes(x = green, color = "green")) +
geom_density(aes(x = red, color = "red")) +
geom_density(aes(x = RedEdge, color = "RedEdge")) +
geom_density(aes(x = NIR, color = "NIR")) +
scale_color_manual(values = c("blue", "green", "orange", "red", "pink"),
name = "Wavelength") +
labs(x = "Wavelength (nm)",
y = "Density",
title = "Green ('healthy') tree")+
theme(plot.title=element_text(size=10))
gt <- ggplot(graytree)+
geom_density(aes(x = blue, color = "blue")) +
geom_density(aes(x = green, color = "green")) +
geom_density(aes(x = red, color = "red")) +
geom_density(aes(x = RedEdge, color = "RedEdge")) +
geom_density(aes(x = NIR, color = "NIR")) +
scale_color_manual(values = c("blue", "green", "orange", "red", "pink"),
name = "Wavelength") +
labs(x = "Wavelength (nm)",
y = "Density",
title = "Gray ('dead') tree")+
theme(plot.title=element_text(size=10))
tk <- ggplot(topkill)+
geom_density(aes(x = blue, color = "blue")) +
geom_density(aes(x = green, color = "green")) +
geom_density(aes(x = red, color = "red")) +
geom_density(aes(x = RedEdge, color = "RedEdge")) +
geom_density(aes(x = NIR, color = "NIR")) +
scale_color_manual(values = c("blue", "green", "orange", "red", "pink"),
name = "Wavelength") +
labs(x = "Wavelength (nm)",
y = "Density",
title = "Top-kill ('damaged') tree")+
theme(plot.title=element_text(size=10))
grid.arrange(ft, gt, tk, nrow = 2, ncol = 2)
fulltree_temp$TreeType <- "Full_Tree"
library(sp)
library(sf)
library(raster)
library(rLiDAR)
library(lidR)
library(rgdal)
library(terra)
library(ggplot2)
library(rgl)
library(gridExtra)
library(agricolae)
library(data.table)
library(plotly)
library(MASS)
library(rayshader)
### Importing Point Cloud as .txt file
topkill <- read.table('TopKill_Set.txt', sep = "\t", header = TRUE)
graytree <- read.table('GrayTree_Set.txt', sep = "\t", header = TRUE)
fulltree <- read.table('FullTree_Set.txt', sep = "\t", header = TRUE)
### Importing Point Cloud as .txt file
colnames(topkill) <- c("x", "y", "z", "blue", "green", "red", "RedEdge", "NIR", "R", "G", "B")
colnames(graytree) <- c("x", "y", "z", "blue", "green", "red", "RedEdge", "NIR", "R", "G", "B")
colnames(fulltree) <- c("x", "y", "z", "blue", "green", "red", "RedEdge", "NIR", "R", "G", "B")
topkill[4:8] <- (topkill[4:8]/10000)
graytree[4:8] <- (graytree[4:8]/10000)
fulltree[4:8] <- (fulltree[4:8]/10000)
ft <- ggplot(fulltree)+
geom_density(aes(x = blue, color = "blue")) +
geom_density(aes(x = green, color = "green")) +
geom_density(aes(x = red, color = "red")) +
geom_density(aes(x = RedEdge, color = "RedEdge")) +
geom_density(aes(x = NIR, color = "NIR")) +
scale_color_manual(values = c("blue", "green", "orange", "red", "pink"),
name = "Wavelength") +
labs(x = "Wavelength (nm)",
y = "Density",
title = "Green ('healthy') tree")+
theme(plot.title=element_text(size=10))
gt <- ggplot(graytree)+
geom_density(aes(x = blue, color = "blue")) +
geom_density(aes(x = green, color = "green")) +
geom_density(aes(x = red, color = "red")) +
geom_density(aes(x = RedEdge, color = "RedEdge")) +
geom_density(aes(x = NIR, color = "NIR")) +
scale_color_manual(values = c("blue", "green", "orange", "red", "pink"),
name = "Wavelength") +
labs(x = "Wavelength (nm)",
y = "Density",
title = "Gray ('dead') tree")+
theme(plot.title=element_text(size=10))
tk <- ggplot(topkill)+
geom_density(aes(x = blue, color = "blue")) +
geom_density(aes(x = green, color = "green")) +
geom_density(aes(x = red, color = "red")) +
geom_density(aes(x = RedEdge, color = "RedEdge")) +
geom_density(aes(x = NIR, color = "NIR")) +
scale_color_manual(values = c("blue", "green", "orange", "red", "pink"),
name = "Wavelength") +
labs(x = "Wavelength (nm)",
y = "Density",
title = "Top-kill ('damaged') tree")+
theme(plot.title=element_text(size=10))
grid.arrange(ft, gt, tk, nrow = 2, ncol = 2)
fulltree_temp <- fulltree
graytree_temp <- graytree
topkill_temp <- topkill
fulltree_temp$TreeType <- "Full_Tree"
graytree_temp$TreeType <- "Gray_Tree"
topkill_temp$TreeType <- "Top_Kill"
main_data <- rbind(fulltree_temp,graytree_temp,topkill_temp)
main_data$TreeType <- factor(main_data$TreeType)
mycolors <- c("chartreuse4", "dark gray", "orange") #for green, gray, and top-kill trees respectively.
blue <- ggplot(main_data, aes(blue, color = TreeType))+
geom_density(linewidth = 0.75)+
scale_color_manual(values = mycolors)+
labs(x = "Wavelength (nm)",
y = "Density",
title = "Blue")+
theme(legend.position = "none")
green <- ggplot(main_data, aes(green, color = TreeType))+
geom_density(linewidth = 0.75)+
scale_color_manual(values = mycolors)+
labs(x = "Wavelength (nm)",
y = "Density",
title = "Green")+
theme(legend.position = "none")
red <- ggplot(main_data, aes(red, color = TreeType))+
geom_density(linewidth = 0.75)+
scale_color_manual(values = mycolors)+
labs(x = "Wavelength (nm)",
y = "Density",
title = "Red")+
theme(legend.position = "none")
RedEdge <- ggplot(main_data, aes(RedEdge, color = TreeType))+
geom_density(linewidth = 0.75)+
scale_color_manual(values = mycolors)+
labs(x = "Wavelength (nm)",
y = "Density",
title = "RedEdge")+
theme(legend.position = "none")
NIR <- ggplot(main_data, aes(NIR, color = TreeType))+
geom_density(linewidth = 0.75)+
scale_color_manual(values = mycolors,
name = "Tree Type",
labels = c("Green 'Healthy' Tree", "Gray 'Dead' Tree", "Top-kill 'Damaged' Tree"))+
labs(x = "Wavelength (nm)",
y = "Density",
title = "NIR")
grid.arrange(arrangeGrob(blue, green, red, ncol=3, nrow=1),
arrangeGrob(RedEdge, NIR, ncol=2, nrow=1, widths=c(1,2)))
main_data$NDVI <- (main_data$NIR-main_data$red)/(main_data$NIR+main_data$red)
main_data$NDRE <- (main_data$NIR-main_data$RedEdge)/(main_data$NIR+main_data$RedEdge)
main_data$SR <- (main_data$NIR/main_data$red)
main_data$GLI <- ((main_data$green - main_data$red)+(main_data$green - main_data$blue))/((2*main_data$green)+main_data$red+main_data$blue)
NDVI <- ggplot(main_data)+
geom_density(aes(NDVI, color = TreeType))+
scale_color_manual(values = mycolors,
name = "Tree Type",
labels = c("Green 'Healthy' Tree", "Gray 'Dead' Tree", "Top-kill 'Damaged' Tree"))+
labs(x = "Wavelength (nm)",
y = "Density",
title = "NDVI")
NDRE <- ggplot(main_data)+
geom_density(aes(NDRE, color = TreeType))+
scale_color_manual(values = mycolors,
name = "Tree Type",
labels = c("Green 'Healthy' Tree", "Gray 'Dead' Tree", "Top-kill 'Damaged' Tree"))+
labs(x = "Wavelength (nm)",
y = "Density",
title = "NDRE")
SR <- ggplot(main_data)+
geom_density(aes(SR, color = TreeType))+
scale_color_manual(values = mycolors,
name = "Tree Type",
labels = c("Green 'Healthy' Tree", "Gray 'Dead' Tree", "Top-kill 'Damaged' Tree"))+
labs(x = "Wavelength (nm)",
y = "Density",
title = "SR")
GLI <- ggplot(main_data)+
geom_density(aes(GLI, color = TreeType))+
scale_color_manual(values = mycolors,
name = "Tree Type",
labels = c("Green 'Healthy' Tree", "Gray 'Dead' Tree", "Top-kill 'Damaged' Tree"))+
labs(x = "Wavelength (nm)",
y = "Density",
title = "GLI")
grid.arrange(NDVI, NDRE, SR, GLI, nrow = 2, ncol = 2)
ggplot(main_data, aes(GLI))+
geom_density()+
labs(x = "Wavelength (nm)",
y = "Density")
model1 <- aov(GLI~TreeType, data = main_data)
summary(model1)
par(mfrow = c(2,2))
res <- residuals(model1)
est <- fitted(model1)
hist(res) #assumption1
plot(est, res); abline(0,0)
qqnorm(res);qqline(res)
HSD1 <- HSD.test(model1, 'TreeType', group = TRUE, console = TRUE)
tukeyLabels <- c("a", "b", "c")
quants <- data.table(main_data)[, list(quant = as.numeric(quantile(GLI)[3])), by = TreeType] # creating a dataframe to insert labels on boxplots that aligns on the 3rd quantile of the distribution of GLI for each tree type.
ggplot(main_data, aes(TreeType,GLI, fill = TreeType)) +
geom_boxplot(size = 0.75) +
labs(title = "Tukey's HSD results",
x = "Tree Type",
y = "Green Leaf Index (GLI)") +
scale_fill_manual(values = mycolors)+
scale_x_discrete(labels = c("Green 'Healthy' Tree", "Gray 'Dead' Tree", "Top-kill 'Damaged' Tree"))+
guides(fill = "none")+
geom_text(data = quants, aes(x = TreeType, y = quant, label = tukeyLabels), size = 10)
ggplot(main_data, aes(GLI, z, color = TreeType))+
geom_density_2d(linewidth = 1)+
scale_color_manual(values = mycolors,
name = "Tree Type",
labels = c("Green 'Healthy' Tree", "Gray 'Dead' Tree", "Top-kill 'Damaged' Tree"))+
labs (x = "Green Leaf Index",
y = "Elevation (z)",
title = "GLI and Elevation density by Tree Type")
ggplot(main_data, aes(GLI, z))+
geom_density_2d_filled(contour_var = "ndensity")+
geom_density_2d(aes(color = TreeType))+
scale_color_manual(values = mycolors,
name = "Tree Type",
labels = c("Green 'Healthy' Tree", "Gray 'Dead' Tree", "Top-kill 'Damaged' Tree"))+
labs (x = "Green Leaf Index",
y = "Elevation (z)",
title = "GLI and Elevation density by Tree Type")+
guides(fill = "none")
ggplot(main_data, aes(GLI, z))+
geom_density_2d_filled(contour_var = "ndensity")+
geom_density_2d(aes(color = TreeType))+
facet_wrap(TreeType~.)+
scale_color_manual(values = mycolors,
name = "Tree Type",
labels = c("Green 'Healthy' Tree", "Gray 'Dead' Tree", "Top-kill 'Damaged' Tree"))+
labs (x = "Green Leaf Index",
y = "Elevation (z)",
title = "GLI and Elevation density by Tree Type")+
guides(fill = "none")
Density2D <- ggplot(main_data, aes(GLI, z))+
stat_density_2d_filled(aes(fill = stat(nlevel)))+
facet_wrap(TreeType~.)+
labs (x = "Green Leaf Index",
y = "Elevation (z)",
title = "GLI and Elevation density by Tree Type")+
scale_fill_viridis_c(option = "A")
# par(mfrow = c(1, 2))
# plot_gg(Density2D, width = 4, height = 4, raytrace = FALSE, preview = TRUE)
plot_gg(Density2D,
multicore = TRUE,
raytrace = TRUE,
width = 4,
height = 4,
scale = 300,
windowsize = c(1200, 960),
zoom = 0.5,
phi = 50,
theta = 35)
Sys.sleep(0.2)
#render_snapshot(clear = TRUE) #un-comment to create a snapshot image of the 3D view (downloadable)
rgl::rglwidget()
kd <- kde2d(main_data$GLI, main_data$z)
fig <- plot_ly(x = kd$x, y = kd$y, z = kd$z) %>% add_surface()
fig
